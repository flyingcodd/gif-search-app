{"version":3,"sources":["helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/AddCategory.js","GiftSearchApp.js","index.js"],"names":["getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","useState","loading","state","setState","useEffect","then","imgs","useFetchGifs","AddCategory","setCategories","inputValue","setInputValue","onSubmit","e","preventDefault","length","cats","type","value","onChange","target","GiftSearchApp","categories","ReactDOM","render","document","getElementById"],"mappings":"0NACaA,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sD,OCCPO,EAAc,SAAC,GAAqB,EAAnBJ,GAAoB,IAAhBC,EAAe,EAAfA,MAAOV,EAAQ,EAARA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECJwB,SAACA,GACzB,MAAyBoB,mBAAS,CAC9Bb,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAaC,EAAb,KAmBA,OATAC,qBAAU,WACNzB,EAAQC,GACHyB,MAAK,SAAAC,GACEH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAG3B,CAACrB,IACIsB,EDhBsBK,CAAa3B,GAA9Ba,EAAZ,EAAON,KAAac,EAApB,EAAoBA,QAEpB,OACI,qCACI,6BAAMrB,IACLqB,GAAW,mBAAGL,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,WAAf,SACI,6BAEQH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAESA,GADCA,EAAIC,e,OEd7BiB,EAAa,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cACxB,EAAmCT,mBAAS,IAA5C,mBAAMU,EAAN,KAAkBC,EAAlB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAS,IACnBN,GAAc,SAAAO,GAAI,OAAGN,GAAH,mBAAkBM,OACpCL,EAAc,MAKlB,SACI,uBACAM,KAAK,OACLC,MAAOR,EACPS,SAjBkB,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,aCHlBG,EAAgB,WAGzB,MAAkCrB,mBAAS,CAAC,cAA5C,mBAAOsB,EAAP,KAAkBb,EAAlB,KAMA,OACI,gCACI,8CACA,uBAEA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEKa,EAAWjC,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAEAA,SAAUA,GADHA,YCnB5B2C,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.b6eecda4.chunk.js","sourcesContent":["\r\nexport const getGifs = async(category) =>{\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=g0zHgLKMNY7MvkU8B1thz6jbYiwXyecD`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({ id, title, url})=> {\r\n\r\n    return(\r\n        <div className='card animate__animated animate__bounce'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n};","//import React, {useEffect, useState} from 'react';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data:images, loading}=useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n            {loading && <p className='animate__animated animate__flash'>Loading...</p>}\r\n            <div className='cardGrid'>\r\n                <ol>\r\n                    {\r\n                        images.map((img) => (\r\n                            <GifGridItem\r\n                                key={ img.id }\r\n                                { ...img }\r\n                            />\r\n                        ))\r\n                    }\r\n                </ol>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n};","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [state,setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n    // setTimeout(() => {\r\n    //     setState({\r\n    //         data: [1,2,3,4,5,6],\r\n    //     loading: false\r\n    //     })\r\n    // }, 3000);\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(imgs=>{\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n            });\r\n    },[category]);\r\n    return state;\r\n}","import React, { useState } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory =({setCategories })=>{\r\n    const[inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.length > 2){\r\n            setCategories(cats=>[inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit} >\r\n            <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n};\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React, { useState } from 'react';\r\nimport { GifGrid } from './components/GifGrid';\r\nimport { AddCategory } from './components/AddCategory';\r\n\r\n\r\nexport const GiftSearchApp = () => {\r\n\r\n    //const categories = ['One Piece','Naruto','Dragon Ball'];\r\n    const [categories,setCategories]= useState(['One Piece']);\r\n    /*const handleAdd = ()=>{\r\n        //setCategories(['Attack on Titan',...Categories]);\r\n        setCategories(cats => ['Attack on Titan',...cats]);\r\n    }*/\r\n\r\n    return(\r\n        <div>\r\n            <h2>GifSearchApp</h2>\r\n            <hr/>\r\n            \r\n            <AddCategory setCategories={setCategories}/>\r\n            <ol>\r\n                {\r\n                 categories.map((category)=> (\r\n                     <GifGrid\r\n                     key = {category}\r\n                     category={category}\r\n                     />\r\n                 ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    );\r\n    \r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GiftSearchApp } from './GiftSearchApp';\n\nReactDOM.render(\n    <GiftSearchApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}